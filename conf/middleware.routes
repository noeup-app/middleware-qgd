# Routes
# This file defines all application middleware.routes (Higher priority middleware.routes first)
# ~~~~

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                        com.noeupapp.middleware.controllers.Assets.versioned(path="/public/lib/middleware-noeupapp", file)
GET         /webjars/*file                       controllers.WebJarAssets.at(file)


# Home page
GET         /                                    com.noeupapp.middleware.application.Applications.index
GET         /login                               com.noeupapp.middleware.authorizationClient.login.Logins.loginAction

GET         /signUp                              com.noeupapp.middleware.authorizationClient.signUp.SignUps.signUpActionGet
POST        /signUp                              com.noeupapp.middleware.authorizationClient.signUp.SignUps.signUpAction

GET         /logout                              com.noeupapp.middleware.authorizationClient.login.Logins.logOut
GET         /forgotPassword                      com.noeupapp.middleware.authorizationClient.forgotPassword.ForgotPasswords.forgotPasswordGet
POST        /forgotPassword                      com.noeupapp.middleware.authorizationClient.forgotPassword.ForgotPasswords.forgotPasswordAction
GET         /forgotPassword/:token               com.noeupapp.middleware.authorizationClient.forgotPassword.ForgotPasswords.forgotPasswordAskNewPasswordGet(token: String)
POST        /forgotPassword/:token               com.noeupapp.middleware.authorizationClient.forgotPassword.ForgotPasswords.forgotPasswordAskNewPassword(token: String)


GET         /authenticate/:provider              com.noeupapp.middleware.authorizationClient.socialAuth.SocialAuths.authenticateAction(provider)
POST        /authenticate/credentials            com.noeupapp.middleware.authorizationClient.login.Logins.authenticateAction

# Clients management
GET         /admin/clients                       com.noeupapp.middleware.authorizationServer.client.Clients.list
GET         /admin/client/new                    com.noeupapp.middleware.authorizationServer.client.Clients.create
POST        /admin/client/add                    com.noeupapp.middleware.authorizationServer.client.Clients.add
POST        /admin/client/update                 com.noeupapp.middleware.authorizationServer.client.Clients.update
GET         /admin/client/edit/:id               com.noeupapp.middleware.authorizationServer.client.Clients.edit(id: String)
PUT         /admin/client                        com.noeupapp.middleware.authorizationServer.client.Clients.update
GET         /admin/client/:id                    com.noeupapp.middleware.authorizationServer.client.Clients.get(id: String)
DELETE      /admin/client/:id                    com.noeupapp.middleware.authorizationServer.client.Clients.delete(id: String)

# page that allow user to authorize client
GET         /oauth2/authorize                   com.noeupapp.middleware.authorizationServer.authorize.Authorizations.authorize(client_id ?= "", redirect_uri ?= "", state ?= "", scope ?= "")
POST        /oauth2/send_auth                   com.noeupapp.middleware.authorizationServer.authorize.Authorizations.send_auth
GET         /oauth2/login                       com.noeupapp.middleware.authorizationServer.authorize.Authorizations.login(client_id ?=  "", redirect_uri ?= "", state ?= "", scope ?= "")
POST        /oauth2/authenticate                com.noeupapp.middleware.authorizationServer.authorize.Authorizations.authenticate
#POST       /oauth2/send_auth/                  com.noeupapp.middleware.authorizationServer.controllers.Apps.send_auth


# OAuth2 Routes
POST        /oauth2/access_token                 com.noeupapp.middleware.authorizationServer.oauth2.OAuth2s.accessToken


# Entity
GET         /entity/accounts/me                 com.noeupapp.middleware.entities.account.Accounts.me


GET         /entity/users                       com.noeupapp.middleware.entities.user.Users.fetchAll
POST        /entity/users                       com.noeupapp.middleware.entities.user.Users.add

GET         /entity/groups                      com.noeupapp.middleware.entities.group.Groups.fetchAll
GET         /entity/groups/:groupId             com.noeupapp.middleware.entities.group.Groups.fetchById(groupId: java.util.UUID)
POST        /entity/groups                      com.noeupapp.middleware.entities.group.Groups.addGroup
POST        /entity/groups/:groupId/add         com.noeupapp.middleware.entities.group.Groups.addEntities(groupId: java.util.UUID)
GET         /entity/groups/:groupId/members     com.noeupapp.middleware.entities.group.Groups.fetchMembers(groupId: java.util.UUID)
PUT         /entity/groups/:groupId/update      com.noeupapp.middleware.entities.group.Groups.updateGroup(groupId: java.util.UUID)

POST        /organisations                      com.noeupapp.middleware.entities.organisation.Organisations.addOrganisation